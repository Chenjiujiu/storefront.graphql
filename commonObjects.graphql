#Objects
type ApiVersion {
	displayName: String!
	handle: String!
	supported: Boolean!
}
type Attribute {
	key: String!
	value: String
}
type Brand {
	colors: BrandColors!
	coverImage: MediaImage
	logo: MediaImage
	shortDescription: String
	slogan: String
	squareLogo: MediaImage
}
type BrandColorGroup {
	background: Color
	foreground: Color
}
type BrandColors {
	primary: [BrandColorGroup!]!
	secondary: [BrandColorGroup!]!
}
type Country {
	availableLanguages: [Language!]!
	currency: Currency!
	isoCode: CountryCode!
	market: Market
	name: String!
	unitSystem: UnitSystem!
}
type Currency {
	isoCode: CurrencyCode!
	name: String!
	symbol: String!
}
type Domain {
	host: String!
	sslEnabled: Boolean!
	url: URL!
}
type Filter {
	id: String!
	label: String!
	type: FilterType!
	values: [FilterValue!]!
}
type FilterValue {
	count: Int!
	id: String!
	input: JSON!
	label: String!
}
type Image {
	altText: String
	height: Int
	id: ID
	url(transform: ImageTransformInput): URL!
	width: Int
}
type Language {
	endonymName: String!
	isoCode: LanguageCode!
	name: String!
}
type Localization {
	availableCountries: [Country!]!
	availableLanguages: [Language!]!
	country: Country!
	language: Language!
	market: Market!
}
type MailingAddress {
	address1: String
	address2: String
	city: String
	company: String
	country: String
	countryCodeV2: CountryCode
	firstName: String
	formatted(
		withName: Boolean
		withCompany:Boolean
	): [String!]!
	formattedArea: String
	id: ID!
	lastName: String
	latitude: Float
	longitude: Float
	name: String
	phone: String
	province: String
	provinceCode: String
	zip: String
}
type Market {
	handle: String!
	id: ID!
	metafield(
		namespace: String!
		key: String!
	): Metafield
	metafields(identifiers: [HasMetafieldsIdentifier!]!): [Metafield]!
}
type Metafield {
	createdAt: DateTime!
	description: String
	id: ID!
	key: String!
	namespace: String!
	parentResource: MetafieldParentResource!
	reference: MetafieldReference
	type: String!
	updatedAt: DateTime
	value: String!
	references(
		first: Int
		after: String
		last: Int
		before: String
	): ReferenceConnection
}
type MetaobjectField {
	key: String!
	reference: MetafieldReference
	type: String!
	value: String
	references(
		first: Int
		after: String
		last: Int
		before: String
	): ReferenceConnection
}
type MoneyV2 {
	amount: Decimal!
	currencyCode: CurrencyCode!
}
type PageInfo {
	startCursor: String
	endCursor: String
	hasNextPage: Boolean!
	hasPreviousPage: Boolean!
}
type QueryRoot {
	article(id: ID!): Article
	blog(
		id: ID
		handle: String
	): Blog
	cart(id: ID!): Cart
	collection(
		id: ID
		handle: String
	): Collection
	customer(customerAccessToken: String!): Customer
	localization: Localization!
	menu(handle: String!): Menu
	metaobject(
		id: ID
		handle: MetaobjectHandleInput
	): Metaobject
	node(id: ID!): Node
	nodes(ids: [ID!]!): [Node]!
	page(
		id: ID
		handle: String
	): Page
	predictiveSearch(
		limit: Int,
		limitScope: PredictiveSearchLimitScope
		query: String!
		searchableFields: [SearchableField!]
		types: [PredictiveSearchType!]
		unavailableProducts: SearchUnavailableProductsType
	): PredictiveSearchResult
	product(
		id: ID
		handle: String
	): Product
	productRecommendations(
		productId: ID!
		intent: ProductRecommendationIntent
	): [Product!]
	publicApiVersions: [ApiVersion!]!
	shop: Shop!
	articles(
		first: Int
		after: String
		last: Int
		before: String
		reverse: Boolean
		sortKey: ArticleSortKeys
		query: String
	): ArticleConnection
	blogs(
		first: Int
		after: String
		last: Int
		before: String
		reverse: Boolean
		sortKey: BlogSortKeys
		query: String
	): BlogConnection
	collections(
		first: Int
		after: String
		last: Int
		before: String
		reverse: Boolean
		sortKey: CollectionSortKeys
		query: String
	): CollectionConnection
	locations(
		first: Int
		after: String
		last: Int
		before: String
		reverse: Boolean
		sortKey: LocationSortKeys
		query: String
	): LocationConnection
	metaobjects(
		type: String!
		sortKey: String
		first: Int
		after: String
		last: Int
		before: String
		reverse: Boolean
	): MetaobjectConnection
	pages(
		first: Int
		after: String
		last: Int
		before: String
		reverse: Boolean
		sortKey: PageSortKeys
		query: String
	): PageConnection
	productTags(
		first: Int!
	): ProductTagConnection
	productTypes(
		first: Int!
	): ProductTypeConnection
	products(
		first: Int
		after: String
		last: Int
		before: String
		reverse: Boolean
		sortKey: ProductSortKeys
		query: String
	): ProductConnection
	search(
		query: String
		prefix: SearchPrefixQueryType
		productFilters: [ProductFilter!]
		reverse: Boolean
		sortKey: SearchSortKeys
		types: [SearchType!]
		unavailableProducts: SearchUnavailableProductsType
		first: Int
		after: String
		last: Int
		before: String
	): SearchConnection
	urlRedirects(
		first: Int
		after: String
		last: Int
		before: String
		reverse: Boolean
		query: String
	): UrlRedirectConnection
}

type SEO {
	description: String
	title: String
}
