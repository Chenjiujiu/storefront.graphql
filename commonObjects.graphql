# Queries
type Query {
	localization: Localization
	node(
		id: ID!,
	): Node
	nodes(
		ids: [ID!]!,
	): Node
	publicApiVersions: ApiVersion
}

# Mutations
type Mutation {
	cartMetafieldsSet(
		metafields: [CartMetafieldsSetInput!]!
	): CartMetafieldsSetPayload
}

#Objects
type ApiVersion {
	displayName: String!
	handle: String!
	supported: Boolean!
}
type Attribute {
	key: String!
	value: String
}
type Brand {
	colors: BrandColors!
	coverImage: MediaImage
	logo: MediaImage
	shortDescription: String
	slogan: String
	squareLogo: MediaImage
}
type BrandColorGroup {
	background: Color
	foreground: Color
}
type BrandColors {
	primary: [BrandColorGroup!]!
	secondary: [BrandColorGroup!]!
}
type Country {
	availableLanguages: [Language!]!
	currency: Currency!
	isoCode: CountryCode!
	market: Market
	name: String!
	unitSystem: UnitSystem!
}
type Currency {
	isoCode: CurrencyCode!
	name: String!
	symbol: String!
}
type Domain {
	host: String!
	sslEnabled: Boolean!
	url: URL!
}
type Filter {
	id: String!
	label: String!
	type: FilterType!
	values: [FilterValue!]!
}
type FilterValue {
	count: Int!
	id: String!
	input: JSON!
	label: String!
}
type Image {
	altText: String
	height: Int
	id: ID
	url: URL!
	width: Int
}
type Language {
	endonymName: String!
	isoCode: LanguageCode!
	name: String!
}
type Localization {
	availableCountries: [Country!]!
	availableLanguages: [Language!]!
	country: Country!
	language: Language!
	market: Market!
}
type MailingAddress {
	address1: String
	address2: String
	city: String
	company: String
	country: String
	countryCodeV2: CountryCode
	firstName: String
	formatted: [String!]!
	formattedArea: String
	id: ID!
	lastName: String
	latitude: Float
	longitude: Float
	name: String
	phone: String
	province: String
	provinceCode: String
	zip: String
}
type Market {
	handle: String!
	id: ID!
	metafield: Metafield
	metafields: [Metafield]!
}
type Metafield {
	createdAt: DateTime!
	description: String
	id: ID!
	key: String!
	namespace: String!
	parentResource: MetafieldParentResource!
	reference: MetafieldReference
	type: String!
	updatedAt: DateTime
	value: String!
}
type MetaobjectField {
	key: String!
	reference: MetafieldReference
	type: String!
	value: String
}
type MoneyV2 {
	amount: Decimal!
	currencyCode: CurrencyCode!
}
type PageInfo {
	startCursor: String
	endCursor: String
	hasNextPage: Boolean!
	hasPreviousPage: Boolean!
}
type QueryRoot {
	article: Article
	blog: Blog
	cart: Cart
	collection: Collection
	customer: Customer
	localization: Localization!
	menu: Menu
	metaobject: Metaobject
	node: Node
	nodes: [Node]!
	page: Page
	predictiveSearch: PredictiveSearchResult
	product: Product
	productRecommendations: [Product!]
	publicApiVersions: [ApiVersion!]!
	shop: Shop!
	articles: ArticlesConnection
	blogs: BlogsConnection
	collections: CollectionsConnection
	locations: LocationsConnection
	metaobjects: MetaobjectsConnection
	pages: PagesConnection
	productTags: ProductTagsConnection
	productTypes: ProductTypesConnection
	products: ProductsConnection
	search: SearchConnection
	urlRedirects: UrlRedirectsConnection
}

type SEO {
	description: String
	title: String
}
